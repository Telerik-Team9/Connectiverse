@model UserViewModel
@inject UserManager<User> UserManager
@{
    var user = await this.UserManager.GetUserAsync(User);
    var isLoggedIn = user.Id == Model.Id ? true : false;

    var postViewModel = new PostViewModel
    {
        UserId = Model.Id
    };

    var filteredPosts = Model.Posts.Where(p => p.PhotoUrl != null).ToList();
}

<div class="col-xl-9 col-lg-8 col-md-8 col-xs-12 ">

    <!-- Profile Tabs -->
    <div class="card social-tabs">
        <ul class="nav nav-tabs md-tabs tab-timeline" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" data-toggle="tab" href="#timeline" role="tab">Timeline</a>
                <div class="slide"></div>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#about" role="tab">About</a>
                <div class="slide"></div>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#photos" role="tab">Photos</a>
                <div class="slide"></div>
            </li>
            <li class="nav-item">
                <a class="nav-link" data-toggle="tab" href="#friends" role="tab">Friends</a>
                <div class="slide"></div>
            </li>
        </ul>
    </div>

    <!-- Profile Tabs Content -->
    <div class="tab-content">

        <!-- TIMELINE tab -->
        @*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">*@

        <div class="tab-pane active" id="timeline">
            <!-- Create a post -->
            @if (isLoggedIn)
            {
                <partial name="_CreatePostPartial" model="postViewModel" />
            }

            <!-- All posts -->
            <div class="row">
                <div class="col-md-12 timeline-dot">
                    @foreach (var post in Model.Posts)
                    {
                        if (post.UserId == default)
                        {
                            continue;
                        }
                        var postCommentVM = new PostCommentViewModel { Post = post };
                        <partial name="_PostViewPartial" model="postCommentVM" />
                    }
                </div>
            </div>
        </div>

        <!-- ABOUT tab -->
        <partial name="_ProfileInfoTabPartial" model="Model" />

        <!-- PHOTOS tab -->
        <partial name="_ProfileGalleryTabPartial" model="filteredPosts" />  @*Only Posts with images*@

        <!-- FRIENDS tab -->
        <div class="tab-pane" id="friends">
            <div class="row">
                @foreach (var friend in Model.Friends)
                {
                    <partial name="_ProfileFriendsTabPartial" model="friend" />
                }
            </div>
        </div>

    </div>

</div>
